# Generated by Django 5.0.1 on 2024-03-01 22:27

import django.contrib.auth.models
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('intra_id', models.IntegerField(null=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.TextField(unique=True)),
                ('password', models.CharField(max_length=128)),
                ('avatar', models.ImageField(default='/static/Client/Assets/KippyLabImage.png', upload_to='Client/static/Client/Assets/avatar')),
                ('avatar_intra', models.TextField(default='')),
                ('is_active', models.BooleanField(default=False)),
                ('friends', models.ManyToManyField(blank=True, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(related_name='%(app_label)s_%(class)s_related', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='%(app_label)s_%(class)s_related', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
